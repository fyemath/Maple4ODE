on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  schedule:
    - cron:  '0 11 * * 1'

name: Build and deploy bookdown

env:
  isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (r-${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: '4.1.1'} 

    env:
      LANG: "en_US.UTF-8"
      TZ: "America/New York"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KNITR_OPTIONS: "knitr.chunk.tidy=TRUE"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          Ncpus: 2

      - name: Install Pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.14.2'

      - name: Install TinyTeX
        uses: r-lib/actions/setup-tinytex@v1
        env:
          # install full prebuilt version
          TINYTEX_INSTALLER: TinyTeX

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: |
            sessioninfo
          needs: book

      - name: Install OS dependencies
        run: |
          brew update
          brew install --cask xquartz
          brew install --cask calibre

      - name: Install phamtomJS for webshot
        run: |
          webshot::install_phantomjs()
        shell: Rscript {0}

      # - name: Install bookdown package
      #   run: xfun::install_dir(".")
      #   shell: Rscript {0}

      # - name: Session info
      #   run: |
      #     options(width = 100)
      #     pkgs <- installed.packages()[, "Package"]
      #     sessioninfo::session_info(pkgs, include_base = TRUE)
      #     rmarkdown::find_pandoc()
      #   shell: Rscript {0}

      # - name: Cache R packages
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: r-${{ matrix.config.os }}-${{ matrix.config.r }}-${{ hashFiles('renv.lock') }}
      #     restore-keys: r-${{ matrix.config.os }}-${{ matrix.config.r }}-

# https://github.com/mpadge/bookdown-actions-test/blob/master/.github/workflows/master.yml

      - name: Query dependencies
        run:
            Rscript -e "install.packages('remotes')" -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Cache R packages
        uses: actions/cache@v1
        with:
            path: ${{ env.R_LIBS_USER }}
            key: r-${{ matrix.config.os }}-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
            restore-keys: r-${{ matrix.config.os }}-${{ matrix.config.r }}-


      - name: Install dependencies
        run:
            Rscript -e "library(remotes)" -e "deps <- readRDS('depends.Rds')" -e "deps[['installed']] <- vapply(deps[['package']], remotes:::local_sha, character(1))" -e "update(deps)"

###

      - name: Cache bookdown results
        uses: actions/cache@v2
        with:
          path: _bookdown_files
          key: bookdown-${{ matrix.config.os }}-${{ matrix.config.r }}-${{ hashFiles('**/*Rmd') }}
          restore-keys: bookdown-${{ matrix.config.os }}-${{ matrix.config.r }}-

      - name: Render Book
        run: Rscript -e 'bookdown::render_book("index.Rmd", "all")'

      - name: Upload book folder for debug
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: Upload Book
          path: book_output

      # 先本地创建一个 Github Pages 分支推送上来才行
      # https://bookdown.org/yihui/bookdown/github.html
      - name: Checkout the gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: book_output

      - name: Deploy to Github Pages
        if: ${{ github.ref == 'refs/heads/master' }}
        run: ./_deploy.sh
